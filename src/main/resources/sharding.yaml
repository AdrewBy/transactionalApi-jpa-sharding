#mode:
#  type: Standalone
#  repository:
#    type: File

#props:
#  proxy-frontend-database-protocol-type: PostgreSQL
#  proxy-backend-query-with-meta-data: true
#  sql-show: true

dataSources:
  ds0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://db0:5416/ds0
    username: postgres
    password: postgres
  ds1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://db1:5417/ds1
    username: postgres
    password: postgres
  ds2:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://db2:5418/ds2
    username: postgres
    password: postgres
  ds3:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://db3:5419/ds3
    username: postgres
    password: postgres


rules:
  - !TRANSACTION
    defaultType: XA
    providerType: Narayana

  - !AUTHORITY
    users:
      - user: postgres
        password: postgres
    privilege:
      type: ALL_PERMITTED

  - !BROADCAST
    tables: # Broadcast tables
      - wallet_types

  - !SHARDING
    tables:

      wallets:
        actualDataNodes: ds${0..3}.wallets
        databaseStrategy:
          standard:
            shardingColumn: user_uid
            shardingAlgorithmName: wallet-hash-mod

      transactions:
        actualDataNodes: ds${0..3}.transactions
        databaseStrategy:
          standard:
            shardingColumn: user_uid
            shardingAlgorithmName: wallet-hash-mod

      payment_requests:
        actualDataNodes: ds${0..3}.payment_requests
        databaseStrategy:
          standard:
            shardingColumn: user_uid
            shardingAlgorithmName: wallet-hash-mod

      top_up_requests:
        actualDataNodes: ds${0..3}.top_up_requests
        databaseStrategy:
          hint:
            shardingAlgorithmName: payment-hash-mod

#      top_up_requests:
#        actualDataNodes: ds${0..3}.top_up_requests
#        databaseStrategy:
#          standard:
#            shardingColumn: payment_request_uid
#            shardingAlgorithmName: wallet-hash-mod

      withdrawal_requests:
        actualDataNodes: ds${0..3}.withdrawal_requests
        databaseStrategy:
          hint:
            shardingAlgorithmName: payment-hash-mod

      transfer_requests:
        actualDataNodes: ds${0..3}.transfer_requests
        databaseStrategy:
          hint:
            shardingAlgorithmName: payment-hash-mod

#    bindingTables:
#      - wallets, payment_requests, transactions

    shardingAlgorithms:

      wallet-hash-mod:
        type: CLASS_BASED
        props:
          strategy: STANDARD
          algorithmClassName: com.ustsinau.transactionapi.shardingAlgorithm.UUIDHashModShardingAlgorithm

      payment-hash-mod:
        type: CLASS_BASED
        props:
          strategy: HINT
          algorithmClassName: com.ustsinau.transactionapi.shardingAlgorithm.MyHintShardingAlgorithm

props:
  sql-show: false
